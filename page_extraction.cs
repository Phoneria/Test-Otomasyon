///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

  // âœ… FIXED: Added missing namespace







namespace Izzet_Test_V1
{
    public partial class Recording1
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }

        public static void Main()
        {
            try
            {
             string basePath = repo.AselsanKardelen.AbsoluteBasePath.ToString();
            IList<Unknown> elements = Host.Local.Find<Unknown>(basePath + "//*");
            
            using (StreamWriter writer = new StreamWriter("UIElements.txt"))
            {
                foreach (var element in elements)
                {
                    writer.WriteLine(element.GetPath());
                }
            }
            Report.Log(ReportLevel.Info, "UI element paths saved to file.");


            }
            catch (Exception ex)
            {
                Report.Error($"An error occurred: {ex.Message}");
            }

                    }

    }
}
